---
import type { Version, Progress } from "../lib/progress";
import { fetchProgress } from "../lib/progress";
import { Chart } from "./Chart";

let selectedEntry;

interface Props {
  version: Version;
  color: "green" | "yellow" | "blue" | "orange";
}

export type UplotData = [number[], number[]];

const { version, color } = Astro.props;

const colors = {
  green: { stroke: "#40e334", fill: "#91eb7f" },
  yellow: { stroke: "#e3ac34", fill: "#edc97e" },
  blue: { stroke: "#3d76da", fill: "#1e3b6d" },
  orange: { stroke: "#cc8400", fill: "#ffa500" },
};

const data = await fetchProgress(version);
const { stroke, fill } = colors[color];

const uplotData = data.reduce(
  (acc, current) => {
    acc[0].push(current.timestamp);
    acc[1].push(current.percentBytes);
    return acc;
  },
  [[], []] as UplotData
);

// const uplotData = [
//   [1, 2, 3, 4],
//   [5, 6, 7, 8],
// ] as UplotData;
---

<div id="plot">
  <Chart
    client:only
    uplotData={uplotData}
    stroke={stroke}
    fill={fill}
    color={color}
  />
</div>
